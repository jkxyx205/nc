<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="    
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/context     
        http://www.springframework.org/schema/context/spring-context.xsd    
        http://www.springframework.org/schema/mvc     
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<context:component-scan base-package="com.rick" use-default-filters="false">
		<!-- 	使用的spring注解+springMVC注解，默认情况下spring应该先加载applicationContext.xml，之后再加载springMVC-servlet.xml，
					可能会造成事务失效 ,在Junit测试事务成功，但是在SpirngMVC测试失败-->
	 	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>   
	</context:component-scan>
	 
   <mvc:annotation-driven
    conversion-service="conversionService" >  
		<mvc:message-converters register-defaults="true">  
			 <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
	                <constructor-arg value="UTF-8" />  
	           </bean>  
	            <!-- 将Jackson2HttpMessageConverter的默认格式化输出为true -->  
	           <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	                 <property name="objectMapper">  
	                    <bean class="com.rick.base.context.ObjectMappingCustomer">  
	                        <property name="dateFormat">  
	                            <bean class="java.text.SimpleDateFormat">  
	                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
	                            </bean>  
	                        </property>  
	                    </bean>  
	                </property>  
	                <property name="supportedMediaTypes">
	                 <list>  
	                		<value>text/plain;charset=UTF-8</value>  
	                		<value>application/json;charset=UTF-8</value>
	            	</list>  
	                </property>
	            </bean>  
	           <bean id="stringHttpMessageConverter"  
			        class="org.springframework.http.converter.StringHttpMessageConverter">  
			        <constructor-arg value="UTF-8" index="0"></constructor-arg><!--  
			            避免出现乱码 -->  
			        <property name="supportedMediaTypes">  
			            <list>  
			                <value>text/plain;charset=UTF-8</value>  
			            </list>  
			        </property>  
			    </bean>  
				 <!-- <bean id="marshallingHttpMessageConverter"  
				        class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">  
				        <property name="marshaller" ref="castorMarshaller" />  
				        <property name="unmarshaller" ref="castorMarshaller" />  
				        <property name="supportedMediaTypes">  
				            <list>  
				                <value>text/xml;charset=UTF-8</value>  
				                <value>application/xml;charset=UTF-8</value>  
				            </list>  
				        </property>  
				    </bean>  -->
			 </mvc:message-converters>
	</mvc:annotation-driven>
	

	<!-- 静态资源(js/image)的访问 -->
	<mvc:resources location="classpath:resource/i18n/client/" mapping="/resource/i18n/**" />
	<mvc:resources location="/resources/js/" mapping="/resources/js/**" />
	<mvc:resources location="/resources/css/" mapping="/resources/css/**" />
	<mvc:resources location="/resources/images/" mapping="/images/**" />
	<mvc:resources location="/resources/fonts/" mapping="/resources/fonts/**" />
	<mvc:resources location="/resources/WEB-INF/uploadfiles/" mapping="/uploadfiles/**" />
	<mvc:resources location="/resources/plugin/" mapping="/resources/plugin/**" />
	<mvc:resources location="/resources/upload/" mapping="/resources/upload/**" />
	<mvc:resources location="/resources/head/" mapping="/resources/head/**" />
	<mvc:resources location="/WEB-INF/pages/decorator/" mapping="/WEB-INF/pages/decorator/**" />
 
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
 <!-- 拦截器必须配置在springmvc.xml中，不能配置其他子文件夹中  -->
	<mvc:interceptors>
  			<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="localeChangeInterceptor"
				class="com.rick.base.context.interceptor.CustomLocaleChangeInterceptor">
 				<property name="paramName" value="lang" /> 
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="cookieName" value="lang"></property>
		<property name="cookieMaxAge" value="1000000"></property>
		<property name="defaultLocale" value="zh"></property>
	</bean> 
	
 	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" >
		<property name="defaultLocale" value="en"></property>
	</bean>  -->
	
	<!-- 异常处理 ,spring 处理异常打不出堆栈信息-->
	<bean id="exceptionResolver" class="com.rick.base.exception.CustomSimpleMappingExceptionResolver">
	  <property name="exceptionMappings"> 
     	<props> 
		  <prop key="com.rick.base.exception.SystemException">error/500</prop> 
          <prop key="com.rick.base.exception.BusinessException">error/errorpage</prop>
		   <prop key="java.lang.Exception">error/500</prop>
       </props> 
   	 </property> 
	</bean>
	
	<bean id="conversionService"  
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">  
		  
		<property name="converters">  
		    <list>  
		        <bean class="com.rick.base.context.converter.DateConverter" />  
		        <bean class="com.rick.base.context.converter.BooleanConverter" />  
		    </list>  
		</property> 
		</bean>
		
	 <!-- 文件上传解析器 id 必须为multipartResolver -->
     <bean id="multipartResolver" 
         class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- <property name="maxUploadSize" value="10485760"/>  -->   
     </bean>


</beans>